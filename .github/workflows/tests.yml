name: Tests

on: [ push, pull_request ]

jobs:
  unit:
    name: Unit Tests ( PHP ${{ matrix.php }})

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [ 7.3, 7.4 ]
        mysql: [ 5.7 ]
      fail-fast: false

    env:
      SOLIDINVOICE_ENV: test
      SOLIDINVOICE_DEBUG: 1
      SKIP_FUNCTIONAL_BOOTSTRAP: 1

    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: date.timezone=Europe/Paris, opcache.enable=1, opcache.enable_cli=1, opcache.memory_consumption=256, opcache.max_accelerated_files=32531, opcache.interned_strings_buffer=8, opcache.validate_timestamps=0, opcache.save_comments=1, opcache.fast_shutdown=0
          extensions: intl, gd, opcache, mysql, pdo_mysql, :xdebug
          tools: symfony
          coverage: pcov

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json composer.lock') }}
          restore-keys: ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install dependencies
        run: composer install --ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare application database
        env:
          database_port: ${{ job.services.mysql.ports['3306'] }}
        run: |
          bin/console doctrine:database:create -n -vvv
          bin/console doctrine:migrations:migrate -n -vvv

      - name: Run test suite
        env:
          database_port: ${{ job.services.mysql.ports['3306'] }}
        run: bin/simple-phpunit --exclude-group installation,functional --coverage-clover build/logs/clover.xml

      - name: Upload coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls --coverage_clover=build/logs/clover.xml -v

  functional:
    name: Functional Tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [ 7.3, 7.4 ]
        mysql: [ 5.6, 5.7, 8.0 ]
      fail-fast: false

    env:
      SOLIDINVOICE_ENV: test
      SOLIDINVOICE_DEBUG: 1
      SKIP_FUNCTIONAL_BOOTSTRAP: 1
      PANTHER_CHROME_DRIVER_BINARY: /usr/local/bin/chromedriver
      PANTHER_WEB_SERVER_DIR: ./web
      PANTHER_EXTERNAL_BASE_URI: 'http://127.0.0.1:8000'
      PANTHER_NO_HEADLESS: 0

    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: nanasess/setup-chromedriver@master

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          ini-values: date.timezone=Europe/Paris, opcache.enable=1, opcache.enable_cli=1, opcache.memory_consumption=256, opcache.max_accelerated_files=32531, opcache.interned_strings_buffer=8, opcache.validate_timestamps=0, opcache.save_comments=1, opcache.fast_shutdown=0
          extensions: intl, gd, opcache, mysql, pdo_mysql, :xdebug
          tools: symfony

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install dependencies
        run: composer install --ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - uses: actions/setup-node@v2-beta
        with:
          node-version: 12

      - run: yarn install

      - run: yarn build

      - name: Run local web server
        run: symfony local:server:start --daemon --no-tls --allow-http

      - name: Run Installation test suite
        env:
          database_port: ${{ job.services.mysql.ports['3306'] }}
        run: bin/simple-phpunit --group installation

      - name: Run functional test suite
        env:
          database_port: ${{ job.services.mysql.ports['3306'] }}
        run: bin/simple-phpunit --group functional
