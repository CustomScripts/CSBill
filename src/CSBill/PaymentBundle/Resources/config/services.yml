parameters:
    csbill_payment.menu.top.class: CSBill\PaymentBundle\Menu\PaymentsMenu
    csbill.payment.payum.paypal_express.action.capture_payment.class: CSBill\PaymentBundle\Action\PaypalExpress\CapturePaymentAction
    csbill.payment.payum.paypal_express.action.notify_payment.class: CSBill\PaymentBundle\Action\PaypalExpress\NotifyPaymentAction
    csbill.payment.payum.paypal_express.action.payment_status.class: CSBill\PaymentBundle\Action\PaypalExpress\PaymentDetailsStatusAction
    csbill.payment.payum.offline.action.status_action.class: CSBill\PaymentBundle\Action\Offline\StatusAction
    csbill.payment.payum.action.capture_action.class: CSBill\PaymentBundle\Action\CaptureAction
    csbill.payment.payum.action.execute_same_request_with_payment_details_action.class: CSBill\PaymentBundle\Action\ExecuteSameRequestWithPaymentDetailsAction
    csbill.payment.payum.extension.update_payment_details_extension.class: CSBill\PaymentBundle\Payum\Extension\UpdatePaymentDetailsExtension
    csbill.payment.twig_extension.class: CSBill\PaymentBundle\Twig\PaymentExtension
    csbill.payment.listener.payment_complete_listener.class: CSBill\PaymentBundle\Listener\PaymentCompleteListener
    csbill.payment.notification.listener.payment_complete_listener.class: CSBill\PaymentBundle\Listener\PaymentReceivedListener
    payum.class: CSBill\PaymentBundle\Payum

services:

    payum.static_registry:
        class: CSBill\PaymentBundle\Payum
        arguments: [[], [], []]
        calls:
            - [setContainer, [@service_container]]

    csbill_payment.menu.top:
        class: %csbill_payment.menu.top.class%
        tags:
            - { name: cs_core.menu, menu: top_right, method: topRightMenu }
            - { name: cs_core.menu, menu: top, method: topMenu }

    csbill.payment.payum.paypal_express.action.capture_payment_action:
        class: %csbill.payment.payum.paypal_express.action.capture_payment.class%
        arguments: [@payum.security.token_factory]
        tags:
            - { name: payum.action, factory: paypal_express_checkout_nvp }

    csbill.payment.payum.paypal_express.action.notify_payment_action:
        class: %csbill.payment.payum.paypal_express.action.notify_payment.class%
        arguments: [@doctrine.orm.entity_manager]
        tags:
            - { name: payum.action, factory: paypal_express_checkout_nvp }

    csbill.payment.payum.paypal_express.action.payment_status_action:
        class: %csbill.payment.payum.paypal_express.action.payment_status.class%
        arguments: [@payum.security.token_factory, %currency%]
        tags:
            - { name: payum.action, factory: paypal_express_checkout_nvp }

    csbill.payment.payum.offline.action.status_action:
        class: %csbill.payment.payum.offline.action.status_action.class%
        tags:
            - { name: payum.action, factory: offline }

    csbill.payment.payum.action.capture_action:
        class: %csbill.payment.payum.action.capture_action.class%
        tags:
            - { name: payum.action, all: true }

    csbill.payment.payum.extension.update_payment_details_extension:
        class: %csbill.payment.payum.extension.update_payment_details_extension.class%
        arguments: [@doctrine.orm.entity_manager]

    csbill.payment.payum.action.execute_same_request_with_payment_details_action:
        class: %csbill.payment.payum.action.execute_same_request_with_payment_details_action.class%
        tags:
            - { name: payum.action, all: true }

    csbill.payment.payum.paypal_express_checkout_api:
        class: Payum\Paypal\ExpressCheckout\Nvp\Api
        arguments:
            - @=service("csbill.payment.method.options").get('paypal_express_checkout')
            - @payum.buzz.client

    csbill.payment.method.options:
        class: CSBill\PaymentBundle\Manager\PaymentSettingsManager
        arguments: [@doctrine]

    csbill.payment.twig_extension:
        class: %csbill.payment.twig_extension.class%
        arguments: [@doctrine]
        tags:
            - { name: twig.extension }

    csbill.payment.listener.payment_complete_listener:
        class: %csbill.payment.listener.payment_complete_listener.class%
        arguments: [@invoice.manager, @doctrine.orm.entity_manager, @session, @translator, @router]
        tags:
            - { name: kernel.event_listener, event: payment.complete, method: onPaymentComplete }

    csbill.payment.notification.listener.payment_listener:
        class: CSBill\PaymentBundle\Listener\PaymentReceivedListener
        arguments: [@notification.manager]
        tags:
            - { name: kernel.event_listener, event: payment.complete, method: onPaymentCapture }
