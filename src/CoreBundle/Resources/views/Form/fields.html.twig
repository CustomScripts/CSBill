{#
 # This file is part of SolidInvoice package.
 #
 # (c) 2013-2015 Pierre du Plessis <info@customscripts.co.za>
 #
 # This source file is subject to the MIT license that is bundled
 # with this source code in the file LICENSE.
 #}

{%- block collection_widget -%}
    <form-collection>
        {% if form|length > 0 %}
            {% for item in form %}
                <template slot="items">
                    <span>
                        {{- form_row(item) -}}
                    </span>
                </template>
            {% endfor %}
        {% endif %}

        {% if prototype is defined %}
            <template slot="prototype" slot-scope="props">
                {{- form_row(prototype)|replace({
                    (prototype.vars.name): "' + props.index + '"
                })|raw -}}
            </template>
            {% if allow_delete %}
                <template slot="deleteButton" slot-scope="props">
                    <v-layout>
                        <v-flex offset-md10 md2>
                            <v-btn color="error" outline small>
                                <span>{{ 'Remove'|trans }}</span>
                                <v-icon>delete</v-icon>
                            </v-btn>
                        </v-flex>
                    </v-layout>
                    <v-divider class="my-4"></v-divider>
                </template>
            {% endif %}
            {% if allow_add %}
                <template slot="addButton">
                    <v-btn absolute fab bottom right>
                        <v-icon>add</v-icon>
                    </v-btn>
                </template>
            {% endif %}
        {% endif %}
    </form-collection>
{%- endblock collection_widget -%}

{% block contact_details_widget %}
    {{ form_row(prototype) }}
{% endblock %}

{% block notification_widget -%}
    <strong>{{ label|default(name)|humanize|title }}</strong>
    {% if help is defined and help is not empty %}
        <span class="help-{{ help_type }}"><small>{{ help|trans|nl2br }}</small></span>
    {% endif %}

    <div class="row">
        <div class="col-md-2">
            {{ form_row(form.email) }}
        </div>
        <div class="col-md-2">
            {{ form_row(form.sms) }}
        </div>
        <div class="col-md-2">
            {{ form_row(form.hipchat) }}
        </div>
    </div>

    {{ form_errors(form) }}
{%- endblock notification_widget %}

{% block image_upload_widget -%}
    {{ block('form_widget_simple') }}

    <div id="{{ id }}-uploader"></div>

    <script>
        require(['core/util/form/upload'], function(Upload) {
            new Upload('{{ id }}', '{{ sessionId }}', '{{ asset("swf/uploadify.swf") }}', '{{ absolute_url("/uploads") }}/', '{{ value }}');
        });
    </script>
{%- endblock image_upload_widget %}

{% block contact_detail_widget -%}
    {% include "@SolidInvoiceClient/Form/contact_details.html.twig" %}
{%- endblock contact_detail_widget %}

{% block contact_widget -%}
    {% include "@SolidInvoiceClient/Form/contacts.html.twig" %}
{%- endblock contact_widget %}

{% block tax_field_widget -%}
    {% spaceless %}
        {% if expanded %}
            {{- block('choice_widget_expanded') -}}
        {% else %}
            {% set attr = attr|merge({'class': attr.class|default('') ~ ' form-control'}) %}
            {% if required and placeholder is none and not placeholder_in_choices %}
                {% set required = false %}
            {% endif %}
            <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
                {% if placeholder is not none %}
                    <option value=""{% if required and value is empty %} selected="selected"{% endif %}>{{ placeholder|trans({}, translation_domain) }}</option>
                {% endif %}
                {% if preferred_choices|length > 0 %}
                    {% set options = preferred_choices %}
                    {{ block('choice_widget_options') }}
                    {% if choices|length > 0 and separator is not none %}
                        <option disabled="disabled">{{ separator }}</option>
                    {% endif %}
                {% endif %}
                {% set options = choices %}
                {{ block('tax_choice_widget_options') }}
            </select>
        {% endif %}
    {% endspaceless %}
{%- endblock %}

{% block tax_number_widget -%}
    <tax-validator title="{{ 'tax.form.input.validate'|trans }}">
        <template slot-scope="props">
            {{ form_widget(form, {'attr': {'@input': "props.item.$bus.$emit('input', $event)", ':error-messages': 'props.item.errors'}}) }}
        </template>
    </tax-validator>
{%- endblock tax_number_widget %}

{% block widget_attributes -%}
    :id="'{{ id }}'" :name="'{{ full_name }}'"
    {{ block('attributes') }}
    {#@input="$store.dispatch('formInput', {form: '{{ full_name }}', value: $event})"#}
{%- endblock widget_attributes %}

{% block tax_choice_widget_options -%}
    {% for group_label, choice in options %}
        {% if choice is iterable %}
            <optgroup label="{{ group_label|trans({}, translation_domain) }}">
                {% set options = choice %}
                {{ block('choice_widget_options') }}
            </optgroup>
        {% else %}
            {% set attrs -%}
                data-type="{{ choice.data.type }}" data-rate="{{ choice.data.rate }}" data-id="{{ choice.data.id }}"
            {%- endset %}
            <option value="{{ choice.value }}" {{ attrs }} {% if choice is selectedchoice(value) %} selected="selected"{% endif %}>{{ choice_translation_domain is same as(false) ? choice.label : choice.label|trans({}, choice_translation_domain) }}</option>
        {% endif %}
    {% endfor %}
{%- endblock tax_choice_widget_options %}

{% block address_widget %}
    <v-layout row wrap>
        <v-flex xs6 d-flex>
            {{ form_row(form.street1) }}
        </v-flex>
        <v-flex xs6 d-flex>
            {{ form_row(form.street2) }}
        </v-flex>

        <v-flex xs6 d-flex>
            {{ form_row(form.city) }}
        </v-flex>
        <v-flex xs6 d-flex>
            {{ form_row(form.state) }}
        </v-flex>

        <v-flex xs6 d-flex>
            {{ form_row(form.zip) }}
        </v-flex>
        <v-flex xs6 d-flex>
            {{ form_row(form.country) }}
        </v-flex>
    </v-layout>
{% endblock address_widget %}

{% block settings_address_widget %}
    <legend>
        <h4>
            {{ 'Address'|trans }}
        </h4>
    </legend>

    {{ block('address_widget') }}
{% endblock settings_address_widget %}

{% block cron_widget %}
    {% set type = 'hidden' %}
    {{ block('form_widget') }}
    <script>
        require(['core/util/form/cron'], function(Cron) {
            Cron.jqcron('#{{ id }}');
        });
    </script>
{% endblock cron_widget %}

{% block discount_row %}
    <label for="{{ form.value.vars.id }}">{{ label }}</label>
    <div class="form-group multiple-form-group input-group">
        {{ form_widget(form.value) }}
        <div class="input-group-btn input-group-select">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
            <span class="concept" id="{{ form.type.vars.id }}_display">
                {% if form.type.vars.value == 'money' %}
                    <span class="currency-view">{{ currency }}</span>
                {% else %}
                    %
                {% endif %}
            </span> <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" role="menu">
                {% for type in form.vars.types %}
                    <li>
                        <a href="#" class="{{ form.type.vars.id }}_types{% if type.name == form.type.vars.value %} hidden{% endif %}" data-symbol="{{ type.symbol }}" data-name="{{ type.name }}">
                            {% if type.name == constant('SolidInvoice\\CoreBundle\\Entity\\Discount::TYPE_MONEY') %}
                                <span class="currency-view">{{ currency }}</span>
                            {% else %}
                                {{ type.symbol }}
                            {% endif %}
                        </a>
                    </li>
                {% endfor %}
            </ul>
            {{ form_widget(form.type) }}
        </div>
    </div>
    <script>
        require(['jquery'], function($) {
            $(function() {
                var $type = $('#{{ form.type.vars.id }}'),
                    $typeDisplay = $('#{{ form.type.vars.id }}_display'),
                    $types = $('.{{ form.type.vars.id }}_types');

                $types.on('click', function(e) {
                    e.preventDefault();
                    var $this = $(this);
                    $typeDisplay.html($this.html());
                    $types.filter('.hidden').removeClass('hidden');
                    $this.addClass('hidden');
                    $type.val($this.data('name')).trigger('change');
                });
            });
        });
    </script>
{% endblock discount_row %}
